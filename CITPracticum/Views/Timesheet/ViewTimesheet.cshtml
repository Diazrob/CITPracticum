@model Placement

@{
    ViewData["Title"] = "Time entries";
    ViewData["CurrentPage"] = "Time entries";
    DateTime now = DateTime.Now;
}

<style>
    /* Additional styling to ensure the layout matches the screenshot provided */
    .table th, .table td {
        vertical-align: middle;
    }

    .view-btn {
        padding: 0.375rem 0.75rem; /* Same padding as standard Bootstrap buttons */
    }

    /* Styles for the 'Delete' button and 'Select All' checkbox */
    .delete-button-container {
        text-align: right;
        padding-bottom: 1rem; /* Adds space below the 'Delete' button */
    }

    .select-all-container {
        display: flex;
        justify-content: flex-end; /* Aligns content to the right side of the cell */
        align-items: center; /* Centers items vertically */
    }

    .select-all-label {
        margin-right: 0.5rem; /* Adds space between the label and the checkbox */
        white-space: nowrap; /* Prevents wrapping to a new line */
    }

    /* Styles to align the button with the tab items */
    .nav-tabs .nav-item:last-child {
        margin-left: auto; /* Push the button to the right */
    }

    .select-all {
        text-align: right; /* Aligns the 'Select All' checkbox to the right */
        padding-right: 1rem; /* Adds some padding on the right */
    }
    /* Ensures the first column uses most of the table's width */
    .table .name-column {
        width: 10%;
    }


    /* Align the checkbox with the 'Select All' text */
    .select-all-label {
        line-height: 1.5; /* Adjust this value as needed to align with your text */
        display: inline-block; /* Ensures the label aligns properly with the checkbox */
        vertical-align: middle; /* Centers the label with the checkbox */
    }

    /* Adjust checkbox alignment */
    #select-all {
        vertical-align: middle;
        /* If further adjustment is needed, you can uncomment the following line and adjust the value */
        /* margin-top: -0.2rem; */
    }

</style>
@if (!User.IsInRole("student"))
{
    <button onclick="window.history.back();" class="btn btn-secondary mb-2">Back</button>
}
<!-- Tab navigation with button -->
<form method="post" asp-controller="Timesheet" asp-action="ProcessEntries">
    <ul class="nav nav-tabs mb-3 d-flex justify-content-end w-100" role="tablist">
        @if (!User.IsInRole("student"))
        {
            <li class="nav-item">
                <a class="nav-link" href="/Timesheet/Index">Timesheets</a>
            </li>
        }
        <li class="nav-item">
            <a class="nav-link active">Time Entries</a>
        </li>
        <!-- This is where the 'Create Form' button is placed -->
        <li class="nav-item" role="presentation">
            @if (Model != null)
            {
                <button class="btn btn-primary" asp-controller="Timesheet" asp-action="CreateTimeEntry" asp-route-id="@Model.Id"><i class="fa-solid fa-plus me-1"></i>Add Time Entry</button>
                @if (!User.IsInRole("student"))
                {
                    <div class="btn-group" role="group" aria-label="Basic example">

                        <button type="button" class="btn btn-success" style="width: 120px;" data-bs-toggle="modal" data-bs-target="#approveModal"><i class="fa-regular fa-circle-check me-1"></i>Approve</button>
                        <button type="button" class="btn btn-danger" style="width: 120px;" data-bs-toggle="modal" data-bs-target="#denyModal"><i class="fa-regular fa-circle-xmark me-1"></i>Deny</button>
                    </div>
                    <button type="button" class="btn btn-danger ms-auto" style="width: 100px;" data-bs-toggle="modal" data-bs-target="#deleteModal"><i class="fa-regular fa-trash-can me-1"></i>Delete</button>
                }
            }
        </li>
    </ul>

    @if (Model != null)
    {
        @if (User.IsInRole("student"))
        {
            // What the user sees for the title, currently nothing
        }
        else
        {
            <h4>@Model.Student.FirstName's Time Entries</h4>
        }
        if (Model.TimesheetId != null && Model.TimesheetId != 0)
        {
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th class="name-column">Date Worked</th>
                        <th class="view-column"># of Hours</th>
                        <th class="view-column">Description</th>
                        <th class="view-column">Total Hours to Date</th>
                        <th class="view-column">Status</th>
                        @if (!User.IsInRole("student"))
                        {
                            <th>Action</th>
                            <th class="checkbox-column">
                                <div class="select-all-container">
                                    <label for="select-all" class="select-all-label">Select All</label>
                                    <input type="checkbox" id="select-all" class="form-check-input">
                                </div>
                            </th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Timesheet != null && Model.Timesheet.TimeEntries != null && Model.Timesheet.TimeEntries.Count >= 1)
                    {
                        @foreach (var entry in Model.Timesheet.TimeEntries)
                        {
                            <tr>
                                <td>@entry.ShiftDate.ToString("yyyy-MM-dd")</td>
                                <td>
                                    @entry.Hours.ToString("0.0")
                                </td>
                                <td>
                                    @entry.Description
                                </td>
                                <td>
                                    @entry.HoursToDate
                                </td>

                                @switch (entry.ApprovalCategory)
                                {
                                    case CITPracticum.Data.Enum.ApprovalCategory.No:
                                        <td>Denied</td>
                                        break;
                                    case CITPracticum.Data.Enum.ApprovalCategory.Yes:
                                        <td>Approved</td>
                                        break;
                                    case CITPracticum.Data.Enum.ApprovalCategory.InProgress:
                                        <td>In Progress</td>
                                        break;
                                }

                                @if (!User.IsInRole("student"))
                                {
                                    <td>
                                        <button class="btn btn-link" asp-controller="Timesheet" asp-action="EditTimeEntry" asp-route-entryId="@entry.Id">Edit</button>
                                    </td>
                                    <td class="text-end"><input type="checkbox" name="timeEntryIds" value="@entry.Id" class="form-check-input"></td>
                                }
                            </tr>
                        }
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>No time sheet associated with this account. Click 'Add Time Entry' to get your Timesheet started!</p>
        }
    }
    else
    {
        <div>No placement found</div>
    }    

    <!-- Modal -->
    <div class="modal fade" id="approveModal" tabindex="-1" aria-labelledby="approveModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="approveModalLabel">Approve</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to approve the selected item(s)?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <input type="hidden" id="actionTypeInput" name="actionType" value="default" />
                    <input type="submit" class="btn btn-success" value="Approve" onclick="setActionType('approve')"  />
                </div>
            </div>
        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="denyModal" tabindex="-1" aria-labelledby="denyModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="denyModalLabel">Deny</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to deny the selected item(s)?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <input type="hidden" name="id" value="@Model.Id" />
                    <input type="submit" class="btn btn-danger" value="Deny" onclick="setActionType('deny')" />
                </div>
            </div>
        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Delete</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete the selected item(s)?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <input type="submit" class="btn btn-danger" value="Delete" onclick="setActionType('delete')" />
                </div>
            </div>
        </div>
    </div>
</form>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        document.getElementById('select-all').addEventListener('change', function (event) {
            const checkboxes = document.querySelectorAll('.table .form-check-input');
            const isChecked = event.target.checked;

            checkboxes.forEach(function (checkbox) {
                // Skip the 'Select All' checkbox to avoid recursive checking
                if (checkbox !== event.target) {
                    checkbox.checked = isChecked;
                }
            });
        });
    });

    function setActionType(actionType) {
        // Set the value of the hidden input before submitting the form
        document.getElementById('actionTypeInput').value = actionType;
    }
</script>