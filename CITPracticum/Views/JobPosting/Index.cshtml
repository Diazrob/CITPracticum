@model IEnumerable<JobPosting>

@{
    ViewData["Title"] = "Job Postings";
    ViewData["CurrentPage"] = "Job Postings";
}

<style>
    /* Custom styles for the navigation tabs */
    .nav-tabs .nav-item.show .nav-link, .nav-tabs .nav-link.active {
        background-color: #ffffff; /* Active tab background color */
        border-color: #dee2e6 #dee2e6 #fff; /* Borders around the active tab */
        border-radius: 0.25rem; /* Rounded corners on the top */
    }

    .nav-link {
        color: #007bff; /* Non-active tab text color */
        margin-right: 2px; /* Spacing between tabs */
        border: 1px solid transparent; /* Transparent border for non-active tabs */
        border-radius: 0.25rem; /* Rounded corners on the top */
    }

    .nav-tabs {
        border-bottom: 1px solid #dee2e6; /* Bottom border for the whole nav */
    }

        /* Styles to align the button with the tab items */
        .nav-tabs .nav-item:last-child {
            margin-left: auto; /* Push the button to the right */
        }
</style>

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fa-solid fa-circle-exclamation fa-lg"></i> @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fa-regular fa-circle-check fa-lg"></i> @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (User.IsInRole("admin") || User.IsInRole("employer"))
{
    <ul class="nav nav-tabs mb-3" role="tablist">
        @if (User.IsInRole("admin"))
        {
            <li class="nav-item">
                <a class="nav-link active" id="job-posts-tab" data-toggle="tab" href="/JobPosting/Index" role="tab" aria-controls="job-posts" aria-selected="true">Job Posts</a>
            </li>

            <li class="nav-item">
                <a class="nav-link step7" id="job-posts-tab" data-toggle="tab" href="/JobPosting/ArchivedPosts" role="tab" aria-controls="job-posts" aria-selected="true">Archived Posts</a>
            </li>
        }
        <li class="nav-item step8 mb-1">
            <a class="btn btn-primary" asp-controller="JobPosting" asp-action="Create"><i class="fa-solid fa-plus"></i> Create Job Posting</a>
        </li>
    </ul>
}

<div id="job-posts" role="tabpanel" aria-labelledby="job-posts-tab">
    <div class="row step1">
        @if (Model.Count() <= 0)
        {
            <h4>There are currently no job postings in the system.</h4>
        }
        @foreach (var item in Model)
        {
            @if (!item.Archived)
            {
                <div class="col-md-6 col-lg-4 mb-3">
                    <div class="card h-100 step2" style="min-height: 526px;">
                        <div class="card-header bg-info bg-gradient">
                            <h5 class="card-text pt-2 pb-2"><b>@item.JobTitle</b></h5>
                        </div>
                        <div class="card-body step3">
                            <div class="mb-2">
                                <h6 class="card-subtitle mb-1"><b>Job Description:</b></h6>
                                <p class="card-text">
                                    @if (item.JobDescription.Length > 100)
                                    {
                                        @Html.Raw(item.JobDescription.Substring(0, 250) + "...")
                                    }
                                    else
                                    {
                                        @item.JobDescription
                                    }
                                </p>
                            </div>

                            <div class="row mt-2">
                                <div class="mb-2 col-md-6">
                                    <h6 class="card-subtitle mb-1"><b>Company:</b></h6>
                                    <p class="card-text">
                                        @if (item.Company.Length >= 50)
                                        {
                                            @Html.Raw(item.Company.Substring(0, 50) + "...")
                                        }
                                        else
                                        {
                                            @item.Company
                                        }
                                    </p>
                                </div>

                                <div class="mb-2 col-md-6">
                                    <h6 class="card-subtitle mb-1"><b>Location:</b></h6>
                                    <p class="card-text">
                                        @if (item.Location.Length >= 50)
                                        {
                                            @Html.Raw(item.Location.Substring(0, 50) + "...")
                                        }
                                        else
                                        {
                                            @item.Location
                                        }
                                    </p>
                                </div>

                            </div>


                            <div class="row mt-2">
                                <div class="mb-2 col-md-6">
                                    <h6 class="card-subtitle mb-1"><b>Application Deadline:</b></h6>
                                    <p class="card-text">@item.Deadline</p>
                                </div>

                                <div class="mb-2 col-md-6">
                                    <h6 class="card-subtitle mb-1"><b>Payment Category:</b></h6>
                                    <p class="card-text">@item.PaymentCategory</p>
                                </div>
                            </div>

                            <div class="mt-2">
                                <h6 class="card-subtitle mb-1"><b>More Info:</b></h6>
                                <p class="card-text">
                                    <a href="@item.Link" target="_blank" class="card-link">
                                        @if (item.Link.Length >= 50)
                                        {
                                            @Html.Raw(item.Link.Substring(0, 50) + "...")
                                        }
                                        else
                                        {
                                            @item.Link
                                        }
                                    </a>
                                </p>
                            </div>
                        </div>

                        <div class="btn-group card-footer step4">
                            @if (ViewBag.PageNum != null)
                            {
                                <a class="btn btn-outline-primary" asp-controller="JobPosting" asp-action="Detail" asp-route-id="@item.Id">View</a>
                                @if (User.IsInRole("admin") || User.IsInRole("employer"))
                                {
                                    <a class="btn btn-outline-secondary" asp-controller="JobPosting" asp-action="Edit" asp-route-pageNum="@ViewBag.PageNum" asp-route-id="@item.Id">Edit</a>
                                    <a class="btn btn-outline-danger" asp-controller="JobPosting" asp-action="Delete" asp-route-pageNum="@ViewBag.PageNum" asp-route-id="@item.Id">Delete</a>
                                }
                                @if (User.IsInRole("admin"))
                                {
                                    <a class="btn btn-outline-warning step5" asp-controller="JobPosting" asp-action="ConfirmArchive" asp-route-pageNum="@ViewBag.PageNum" asp-route-id="@item.Id">Archive</a>
                                    <a class="btn btn-outline-dark step6" asp-controller="JobPosting" asp-action="Applicants" asp-route-pageNum="@ViewBag.PageNum" asp-route-id="@item.Id">Applicants</a>
                                }
                            }
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>
@if (Model.Count() > 0)
{
    <footer class="footer">
        <div class="row mx-auto d-flex align-item-center">
            <div class="col-md-4"></div>
            <div class="col-md-4">
                <nav aria-label="Job postings navigation">
                    <ul class="pagination">
                        <li class="page-item @(ViewBag.PageNum == 1 ? "disabled" : "")">
                            <a class="page-link" href="/JobPosting/Index?page=@(ViewBag.PageNum - 1)">Previous</a>
                        </li>
                        @for (int i = 1; i <= ViewBag.TotalPages; i++)
                        {
                            <li class="page-item @(i == ViewBag.PageNum ? "active" : "")">
                                <a class="page-link" href="/JobPosting/Index?page=@i">@i</a>
                            </li>
                        }
                        <li class="page-item @(ViewBag.PageNum == ViewBag.TotalPages ? "disabled" : "")">
                            <a class="page-link" href="/JobPosting/Index?page=@(ViewBag.PageNum + 1)">Next</a>
                        </li>
                    </ul>
                </nav>
            </div>
            <div class="col-md-4"></div>
        </div>
    </footer>
}

@if (User.IsInRole("admin"))
{
    <script>
        const tour = new Shepherd.Tour({
            useModalOverlay: true,
            defaultStepOptions: {
                classes: 'shadow-md bg-purple-dark',
                scrollTo: true
            },
            defaultStepOptions: {
                exitOnEsc: true
            }
        });

        @*Start of Job Posting Demo*@
            tour.addStep({
                id: 'example-step',
                text: 'Here is the list of all job postings.',
                attachTo: {
                    element: '.step1',
                    on: 'bottom'
                },
                classes: 'step1',
                buttons: [
                    {
                        text: 'Next',
                        action: tour.next
                    },
                    {
                        text: 'Exit Tour',
                        action: tour.cancel
                    }
                ]
            });

        tour.addStep({
            id: 'example-step',
            text: 'Each posting is split into two main areas: the post, and the actions.',
            attachTo: {
                element: '.step2',
                on: 'bottom'
            },
            classes: 'step2',
            scrollTo: {
                behavior: 'smooth',
                block: 'center'
            },
            buttons: [
                {
                    text: 'Next',
                    action: tour.next
                },
                {
                    text: 'Exit Tour',
                    action: tour.cancel
                }
            ]
        });

        tour.addStep({
            id: 'example-step',
            text: 'This is the content of the post. Displaying the title, description, etc.',
            attachTo: {
                element: '.step3',
                on: 'bottom'
            },
            classes: 'step3',
            scrollTo: {
                behavior: 'smooth',
                block: 'center'
            },
            buttons: [
                {
                    text: 'Next',
                    action: tour.next
                },
                {
                    text: 'Exit Tour',
                    action: tour.cancel
                }
            ]
        });

        tour.addStep({
            id: 'example-step',
            text: 'There are many actions here. Starting from left to right: View, Edit, Delete, Archive, and Applicants.',
            attachTo: {
                element: '.step4',
                on: 'bottom'
            },
            classes: 'step4',
            scrollTo: {
                behavior: 'smooth',
                block: 'center'
            },
            buttons: [
                {
                    text: 'Next',
                    action: tour.next
                },
                {
                    text: 'Exit Tour',
                    action: tour.cancel
                }
            ]
        });

        tour.addStep({
            id: 'example-step',
            text: 'Archive allows you to archive a job posting. You can later restore it at any time.',
            attachTo: {
                element: '.step5',
                on: 'bottom'
            },
            classes: 'step5',
            scrollTo: {
                behavior: 'smooth',
                block: 'center'
            },
            buttons: [
                {
                    text: 'Next',
                    action: tour.next
                },
                {
                    text: 'Exit Tour',
                    action: tour.cancel
                }
            ]
        });

        tour.addStep({
            id: 'example-step',
            text: 'Applicants shows you the list of students that have applied to a job posting.',
            attachTo: {
                element: '.step6',
                on: 'bottom'
            },
            classes: 'step6',
            scrollTo: {
                behavior: 'smooth',
                block: 'center'
            },
            buttons: [
                {
                    text: 'Next',
                    action: tour.next
                },
                {
                    text: 'Exit Tour',
                    action: tour.cancel
                }
            ]
        });

        tour.addStep({
            id: 'example-step',
            text: 'This is the area you can go to that stores the archived job postings.',
            attachTo: {
                element: '.step7',
                on: 'bottom'
            },
            classes: 'step7',
            scrollTo: {
                behavior: 'smooth',
                block: 'center'
            },
            buttons: [
                {
                    text: 'Next',
                    action: tour.next
                },
                {
                    text: 'Exit Tour',
                    action: tour.cancel
                }
            ]
        });

        tour.addStep({
            id: 'example-step',
            text: 'Finally, this is the create job posting button, this will direct you to a new page to add a job posting into the system.',
            attachTo: {
                element: '.step8',
                on: 'bottom'
            },
            classes: 'step8',
            scrollTo: {
                behavior: 'smooth',
                block: 'center'
            },
            buttons: [
                {
                    text: 'Finish',
                    action: tour.cancel
                }
            ]
        });
        @*End of Job Posting Demo*@
    </script>
}
@if (User.IsInRole("student"))
{
    <script>
            const tour = new Shepherd.Tour({
            useModalOverlay: true,
            defaultStepOptions: {
                classes: 'shadow-md bg-purple-dark',
                scrollTo: true
            },
            defaultStepOptions: {
                exitOnEsc: true
            }
        });

        @*Start of Job Posting Demo*@
            tour.addStep({
                id: 'example-step',
                text: 'Here is the list of all job postings.',
                attachTo: {
                    element: '.step1',
                    on: 'bottom'
                },
                classes: 'step1',
                buttons: [
                    {
                        text: 'Next',
                        action: tour.next
                    },
                    {
                        text: 'Exit Tour',
                        action: tour.cancel
                    }
                ]
            });

        tour.addStep({
            id: 'example-step',
            text: 'Each posting is split into two main areas: the post, and the actions.',
            attachTo: {
                element: '.step2',
                on: 'bottom'
            },
            classes: 'step2',
            scrollTo: {
                behavior: 'smooth',
                block: 'center'
            },
            buttons: [
                {
                    text: 'Next',
                    action: tour.next
                },
                {
                    text: 'Exit Tour',
                    action: tour.cancel
                }
            ]
        });

        tour.addStep({
            id: 'example-step',
            text: 'This is the content of the post. Displaying the title, description, etc.',
            attachTo: {
                element: '.step3',
                on: 'bottom'
            },
            classes: 'step3',
            scrollTo: {
                behavior: 'smooth',
                block: 'center'
            },
            buttons: [
                {
                    text: 'Next',
                    action: tour.next
                },
                {
                    text: 'Exit Tour',
                    action: tour.cancel
                }
            ]
        });

        tour.addStep({
            id: 'example-step',
            text: 'Here you can view the posting by pressing this button.',
            attachTo: {
                element: '.step4',
                on: 'bottom'
            },
            classes: 'step4',
            scrollTo: {
                behavior: 'smooth',
                block: 'center'
            },
            buttons: [
                {
                    text: 'Next',
                    action: tour.next
                },
                {
                    text: 'Exit Tour',
                    action: tour.cancel
                }
            ]
        });

        @*End of Job Posting Demo*@
    </script>
}
else if (User.IsInRole("employer"))
{
    <script>
        const tour = new Shepherd.Tour({
            useModalOverlay: true,
            defaultStepOptions: {
                classes: 'shadow-md bg-purple-dark',
                scrollTo: true
            },
            defaultStepOptions: {
                exitOnEsc: true
            }
        });

        @*Start of Job Posting Demo*@
            tour.addStep({
                id: 'example-step',
                text: 'Here is the list of the job postings that you have created.',
                attachTo: {
                    element: '.step1',
                    on: 'bottom'
                },
                classes: 'step1',
                buttons: [
                    {
                        text: 'Next',
                        action: tour.next
                    },
                    {
                        text: 'Exit Tour',
                        action: tour.cancel
                    }
                ]
            });

        tour.addStep({
            id: 'example-step',
            text: 'Each posting is split into two main areas: the post, and the actions.',
            attachTo: {
                element: '.step2',
                on: 'bottom'
            },
            classes: 'step2',
            scrollTo: {
                behavior: 'smooth',
                block: 'center'
            },
            buttons: [
                {
                    text: 'Next',
                    action: tour.next
                },
                {
                    text: 'Exit Tour',
                    action: tour.cancel
                }
            ]
        });

        tour.addStep({
            id: 'example-step',
            text: 'This is the content of the post. Displaying the title, description, etc.',
            attachTo: {
                element: '.step3',
                on: 'bottom'
            },
            classes: 'step3',
            scrollTo: {
                behavior: 'smooth',
                block: 'center'
            },
            buttons: [
                {
                    text: 'Next',
                    action: tour.next
                },
                {
                    text: 'Exit Tour',
                    action: tour.cancel
                }
            ]
        });

        tour.addStep({
            id: 'example-step',
            text: 'There are many actions here. Starting from left to right: View, Edit, and Delete. You may view the post, edit the posts contents, or delete the post.',
            attachTo: {
                element: '.step4',
                on: 'bottom'
            },
            classes: 'step4',
            scrollTo: {
                behavior: 'smooth',
                block: 'center'
            },
            buttons: [
                {
                    text: 'Next',
                    action: tour.next
                },
                {
                    text: 'Exit Tour',
                    action: tour.cancel
                }
            ]
        });

        tour.addStep({
            id: 'example-step',
            text: 'Finally, this is the create job posting button, this will direct you to a new page to add a job posting into the system.',
            attachTo: {
                element: '.step8',
                on: 'bottom'
            },
            classes: 'step8',
            scrollTo: {
                behavior: 'smooth',
                block: 'center'
            },
            buttons: [
                {
                    text: 'Finish',
                    action: tour.cancel
                }
            ]
        });
        @*End of Job Posting Demo*@
    </script>
}