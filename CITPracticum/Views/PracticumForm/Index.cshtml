@using CITPracticum.Data.Enum;
@using CITPracticum.ViewModels;
@model Placement

@{
    ViewData["Title"] = "Practicum Forms";
    ViewData["CurrentPage"] = "Practicum Forms";
}

<style>
    /* Custom styles for the navigation tabs */
    .nav-tabs .nav-item.show .nav-link, .nav-tabs .nav-link.active {
        background-color: #ffffff; /* Active tab background color */
        border-color: #dee2e6 #dee2e6 #fff; /* Borders around the active tab */
        border-radius: 0.25rem; /* Rounded corners on the top */
    }

    .nav-link {
        margin-right: 2px; /* Spacing between tabs */
        border: 1px solid transparent; /* Transparent border for non-active tabs */
        border-radius: 0.25rem; /* Rounded corners on the top */
    }

    .nav-tabs {
        border-bottom: 1px solid #dee2e6; /* Bottom border for the whole nav */
    }

    .modal-header, .modal-footer {
        border-bottom: 1px solid #dee2e6;
        border-top: 1px solid #dee2e6;
    }

    .form-label {
        font-weight: bold;
    }

    .modal-logo {
        height: 50px; /* You can adjust the size as needed */
    }

    .modal-body {
        background-color: #f7f7f7;
        padding: 2rem;
    }

    .modal-footer {
        padding: 1rem 2rem;
        background-color: #f7f7f7;
    }

    .submit-btn {
        background-color: #3431f4;
        border-color: #3431f4;
    }

    .zoom {
        transition: transform .4s, box-shadow .4s;
    }

        .zoom:hover {
            transform: scale(1.05);
            box-shadow: 10px 5px 5px gray;
        }

</style>

<!-- Tab navigation with button -->
<ul class="nav nav-tabs mb-3" role="tablist">
    <li class="nav-item">
        <a class="nav-link active" href="/PracticumForm/Index">Practicum Forms</a>
    </li>
    @if (User.IsInRole("admin"))
    {
        <li class="nav-item">
            <a class="nav-link step3" href="/PracticumForm/StudentSubmittedForms">Student Submitted Forms</a>
        </li>
        <li class="nav-item">
            <a class="nav-link step4" href="/PracticumForm/EmployerSubmittedForms">Employer Submitted Forms</a>
        </li>
    }
    <li class="nav-item">
    </li>
</ul>

<div class="step1">
    @if (User.IsInRole("admin") || User.IsInRole("student"))
    {

        <a class="step2" style="text-decoration: none;" asp-controller="PracticumForm" asp-action="CreateFormFOIP">
            <div class="card mt=3 zoom" style="cursor: pointer;">
                <div class="card-body">
                    Form FOIP - Student Release
                </div>
            </div>
        </a>
        <a style="text-decoration: none;" asp-controller="PracticumForm" asp-action="CreateFormStuInfo">
            <div class="card mt-3 zoom" style="cursor: pointer;">
                <div class="card-body">
                    Form ID - Student Information
                </div>
            </div>
        </a>
        <!-- List of Forms as Cards -->
        <a style="text-decoration: none;" asp-controller="PracticumForm" asp-action="CreateFormA">
            <div class="card mt-3 zoom" style="cursor: pointer;">
                <div class="card-body">
                    Form A - Host Information
                </div>
            </div>
        </a>
    }
    <a asp-controller="PracticumForm" asp-action="CreateFormB" style="text-decoration: none;">
        <div class="card mt-3 zoom" style="cursor: pointer;">
            <div class="card-body">
                Form B - Practicum Agreement
            </div>
        </div>
    </a>
    <a asp-controller="PracticumForm" asp-action="CreateFormC" style="text-decoration: none;">
        <div class="card mt-3 zoom" style="cursor: pointer;">
            <div class="card-body">
                Form C - Practicum Evaluation (100 hours)
            </div>
        </div>
    </a>

    <a asp-controller="PracticumForm" asp-action="CreateFormD" style="text-decoration: none;">
        <div class="card zoom mt-3" style="cursor: pointer;">
            <div class="card-body">
                Form D - Practicum Evaluation (200 hours)
            </div>
        </div>
    </a>

    @if (User.IsInRole("admin")) // Add an OR operator for when admin submits the exit interview the student can see it on their dashboard but have it readonly.
    {
        <a asp-controller="PracticumForm" asp-action="CreateFormExitInterview" style="text-decoration: none;">
            <div class="card mt-3 zoom">
                <div class="card-body">
                    Exit Interview
                </div>
            </div>
        </a>
    }
</div>

@if (User.IsInRole("admin"))
{
    <script>
        const tour = new Shepherd.Tour({
            useModalOverlay: true,
            defaultStepOptions: {
                classes: 'shadow-md bg-purple-dark',
                scrollTo: true
            },
            defaultStepOptions: {
                exitOnEsc: true
            }
        });

        @*Start of Prac Forms Demo*@
            tour.addStep({
                id: 'example-step',
                text: 'Here is the list of all the forms.',
                attachTo: {
                    element: '.step1',
                    on: 'bottom'
                },
                classes: 'step1',
                buttons: [
                    {
                        text: 'Next',
                        action: tour.next
                    },
                    {
                        text: 'Exit Tour',
                        action: tour.cancel
                    }
                ]
            });

        tour.addStep({
            id: 'example-step',
            text: 'You can view any of the forms by clicking on them, every student is to complete the necessary forms to be eligible for placement.',
            attachTo: {
                element: '.step2',
                on: 'bottom'
            },
            classes: 'step2',
            buttons: [
                {
                    text: 'Next',
                    action: tour.next
                },
                {
                    text: 'Exit Tour',
                    action: tour.cancel
                }
            ]
        });

        tour.addStep({
            id: 'example-step',
            text: 'This tab allows you to see the students that have submitted forms.',
            attachTo: {
                element: '.step3',
                on: 'bottom'
            },
            classes: 'step3',
            buttons: [
                {
                    text: 'Next',
                    action: tour.next
                },
                {
                    text: 'Exit Tour',
                    action: tour.cancel
                }
            ]
        });

        tour.addStep({
            id: 'example-step',
            text: 'This tab allows you to see the employers that have submitted forms.',
            attachTo: {
                element: '.step4',
                on: 'bottom'
            },
            classes: 'step4',
            buttons: [
                {
                    text: 'Finish',
                    action: tour.cancel
                }
            ]
        });
        @*End of Prac Forms Demo*@
    </script>
}
@if (User.IsInRole("student"))
{
    <script>
        const tour = new Shepherd.Tour({
            useModalOverlay: true,
            defaultStepOptions: {
                classes: 'shadow-md bg-purple-dark',
                scrollTo: true
            },
            defaultStepOptions: {
                exitOnEsc: true
            }
        });

        @*Start of Job Posting Demo*@
            tour.addStep({
                id: 'example-step',
                text: 'Here is the list of all of the forms.',
                attachTo: {
                    element: '.step1',
                    on: 'bottom'
                },
                classes: 'step1',
                buttons: [
                    {
                        text: 'Next',
                        action: tour.next
                    },
                    {
                        text: 'Exit Tour',
                        action: tour.cancel
                    }
                ]
            });

        tour.addStep({
            id: 'example-step',
            text: 'Each form is clickable and allows you to fill out the necessary information to start your placement!',
            attachTo: {
                element: '.step2',
                on: 'bottom'
            },
            classes: 'step2',
            buttons: [
                {
                    text: 'Next',
                    action: tour.next
                },
                {
                    text: 'Exit Tour',
                    action: tour.cancel
                }
            ]
        });

        @*End of Job Posting Demo*@
    </script>
}