@model IEnumerable<AppUser>

@{
    ViewData["Title"] = "Documents";
    ViewData["CurrentPage"] = "Documents > Coverletter";
}

<style>
    .nav-tabs {
        border-bottom: 1px solid #ddd;
    }

    h1 {
        color: #005157; /* Ammolite */
    }

    .btn-primary {
        background-color: #739600; /* Coulee Green */
        border-color: #739600; /* Coulee Green */
    }

        .btn-primary:hover {
            background-color: #567d00; /* A darker shade of Coulee Green */
            border-color: #567d00; /* A darker shade of Coulee Green */
        }

    /* Styles to align the button with the tab items */
    .nav-tabs .nav-item:last-child {
        margin-left: auto; /* Push the button to the right */
    }

    .select-all {
        text-align: right; /* Aligns the 'Select All' checkbox to the right */
        padding-right: 1rem; /* Adds some padding on the right */
    }
    /* Ensures the first column uses most of the table's width */
    .table .name-column {
        width: 40%;
    }
    /* Ensures the form column does not take up much space */
    .table .form-column {
        width: 15%;
    }
</style>

<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link" href="/Documents/Index">Resume</a>
    </li>
    <li class="nav-item">
        <a class="nav-link active" href="/Documents/CoverLetter">Work Preference</a>
    </li>
    <li class="nav-item" role="presentation">
        @if(User.IsInRole("admin"))
        {  
            <button class="btn btn-danger" type="button" data-bs-toggle="modal" data-bs-target="#deleteConfirmationModal"><i class="fa-regular fa-trash-can" style="margin-right: 5px;"></i>Delete</button>
        }
    </li>
</ul>

<!-- Content for the Resume page -->
<div class="container mt-4">
    @if (User.IsInRole("student"))
    {
        <form class="step1">
            <!-- Question 1: Most Preferred Job Preference -->
            <fieldset class="mb-3 step2">
                <legend>1. Most Desirable Work Preference</legend>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" name="mostPreferred[]" id="networking1" value="Networking">
                    <label class="form-check-label" for="networking1">Networking</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" name="mostPreferred[]" id="coding1" value="Coding">
                    <label class="form-check-label" for="coding1">Coding</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" name="mostPreferred[]" id="hardware1" value="Hardware">
                    <label class="form-check-label" for="hardware1">Hardware</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" name="mostPreferred[]" id="others1" value="Others">
                    <label class="form-check-label" for="others1">Other</label>
                </div>
            </fieldset>

            <!-- Question 2: Second Most Preferred Job Preference -->
            <fieldset class="mb-3 step3">
                <legend>2. Slightly Less Desirable Work Preference</legend>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" name="secondPreferred[]" id="networking2" value="Networking">
                    <label class="form-check-label" for="networking2">Networking</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" name="secondPreferred[]" id="coding2" value="Coding">
                    <label class="form-check-label" for="coding2">Coding</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" name="secondPreferred[]" id="hardware2" value="Hardware">
                    <label class="form-check-label" for="hardware2">Hardware</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" name="secondPreferred[]" id="others2" value="Others">
                    <label class="form-check-label" for="others2">Other</label>
                </div>
            </fieldset>

            <!-- Question 3: Least Desired Job Preference -->
            <fieldset class="mb-3 step4">
                <legend>3. Least Desirable Work Preference</legend>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" name="leastPreferred[]" id="networking3" value="Networking">
                    <label class="form-check-label" for="networking3">Networking</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" name="leastPreferred[]" id="coding3" value="Coding">
                    <label class="form-check-label" for="coding3">Coding</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" name="leastPreferred[]" id="hardware3" value="Hardware">
                    <label class="form-check-label" for="hardware3">Hardware</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" name="leastPreferred[]" id="others3" value="Others">
                    <label class="form-check-label" for="others3">Other</label>
                </div>
            </fieldset>

            <!-- Submit Button -->
            <button type="submit" class="btn btn-primary step5">Submit</button>
        </form>
    }
    else if (User.IsInRole("admin"))
    {
        <table class="table">
            <thead>
                <tr>
                    <th class="name-column">Name</th>
                    <th class="view-column">Preferred</th>
                    <th class="view-column">Neutral</th>
                    <th class="view-column">Avoid</th>
                    <th class="checkbox-column">
                        <div class="select-all-container" style="width: 100%;">
                            <label for="select-all" class="select-all-label">Select All</label>
                            <input type="checkbox" id="select-all" class="form-check-input">
                        </div>
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>William Garcia</td>
                    <td>
                        Networking, Coding
                    </td>
                    <td>
                        N/A
                    </td>
                    <td>
                        Hardware
                    </td>
                    <td class="text-center"><input type="checkbox" class="form-check-input"></td>
                </tr>
                <tr>
                    <td>Sophia Martinez</td>
                    <td>
                        Networking, Coding
                    </td>
                    <td>
                        N/A
                    </td>
                    <td>
                        Hardware
                    </td>
                    <td class="text-center"><input type="checkbox" class="form-check-input"></td>
                </tr>
                <tr>
                    <td>James Wilson</td>
                    <td>
                        Networking, Coding
                    </td>
                    <td>
                        N/A
                    </td>
                    <td>
                        Hardware
                    </td>
                    <td class="text-center"><input type="checkbox" class="form-check-input"></td>
                </tr>
                <tr>
                    <td>Isabella Miller</td>
                    <td>
                        Networking, Coding
                    </td>
                    <td>
                        N/A
                    </td>
                    <td>
                        Hardware
                    </td>
                    <td class="text-center"><input type="checkbox" class="form-check-input"></td>
                </tr>
                <tr>
                    <td>Oliver Taylor</td>
                    <td>
                        Networking, Coding
                    </td>
                    <td>
                        N/A
                    </td>
                    <td>
                        Hardware
                    </td>
                    <td class="text-center"><input type="checkbox" class="form-check-input"></td>
                </tr>
            </tbody>
        </table>
    }
</div>

<!-- Modal -->
<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmationModalLabel">Delete Confirmation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete the selected items?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
            </div>
        </div>
    </div>
</div>

@if (User.IsInRole("student"))
{
    <script>
        const tour = new Shepherd.Tour({
            useModalOverlay: true,
            defaultStepOptions: {
                classes: 'shadow-md bg-purple-dark',
                scrollTo: true
            },
            defaultStepOptions: {
                exitOnEsc: true
            }
        });

        @*Start of Cover Letter Demo*@
            tour.addStep({
                id: 'example-step',
                text: 'This is the work preference page. It is split into 3 sections: Most Desirable, Less Desirable, and Least Desirable.',
                attachTo: {
                    element: '.step1',
                    on: 'bottom'
                },
                classes: 'step1',
                scrollTo: {
                    behavior: 'smooth',
                    block: 'center'
                },
                buttons: [
                    {
                        text: 'Next',
                        action: tour.next
                    },
                    {
                        text: 'Exit Tour',
                        action: tour.cancel
                    }
                ]
            });

        tour.addStep({
            id: 'example-step',
            text: 'Here you should choose the positions that you are most comfortable with, most excited for, have experience in, etc.',
            attachTo: {
                element: '.step2',
                on: 'bottom'
            },
            classes: 'step2',
            scrollTo: {
                behavior: 'smooth',
                block: 'center'
            },
            buttons: [
                {
                    text: 'Next',
                    action: tour.next
                },
                {
                    text: 'Exit Tour',
                    action: tour.cancel
                }
            ]
        });

        tour.addStep({
            id: 'example-step',
            text: 'Here you should choose the positions that you are a bit less comfortable with, not as excited for as the first choices, have less experience in, etc.',
            attachTo: {
                element: '.step3',
                on: 'bottom'
            },
            classes: 'step3',
            scrollTo: {
                behavior: 'smooth',
                block: 'center'
            },
            buttons: [
                {
                    text: 'Next',
                    action: tour.next
                },
                {
                    text: 'Exit Tour',
                    action: tour.cancel
                }
            ]
        });

        tour.addStep({
            id: 'example-step',
            text: 'Here you should choose the positions that you are a not comfortable with, not really excited for, have little to none experience in, etc.',
            attachTo: {
                element: '.step4',
                on: 'bottom'
            },
            classes: 'step4',
            scrollTo: {
                behavior: 'smooth',
                block: 'center'
            },
            buttons: [
                {
                    text: 'Next',
                    action: tour.next
                },
                {
                    text: 'Exit Tour',
                    action: tour.cancel
                }
            ]
        });

        tour.addStep({
            id: 'example-step',
            text: 'Press the Submit button when you are comfortable with your answers to the questions. You may come back at later date to change these.',
            attachTo: {
                element: '.step5',
                on: 'bottom'
            },
            classes: 'step5',
            scrollTo: {
                behavior: 'smooth',
                block: 'center'
            },
            buttons: [
                {
                    text: 'Finish',
                    action: tour.cancel
                }
            ]
        });

        @*End of Cover Letter Demo*@
    </script>
}

<script>
    document.addEventListener('DOMContentLoaded', function () {
        document.getElementById('select-all').addEventListener('change', function (event) {
            const checkboxes = document.querySelectorAll('.table .form-check-input');
            const isChecked = event.target.checked;

            checkboxes.forEach(function (checkbox) {
                // Skip the 'Select All' checkbox to avoid recursive checking
                if (checkbox !== event.target) {
                    checkbox.checked = isChecked;
                }
            });
        });
    });
</script>
