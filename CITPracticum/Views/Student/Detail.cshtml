@using CITPracticum.ViewModels;
@model DetailStudentViewModel

@{
    if (User.IsInRole("student"))
    {
        ViewData["Title"] = "Profile";
        ViewData["CurrentPage"] = "Profile";
    }
    else
    {
        ViewData["Title"] = "Students";
        ViewData["CurrentPage"] = "Students > Profile";
    }
}
<!-- Porfolio Item Row -->
@if (TempData["Message"] != null)
{
    <div class="alert alert-success">
        @TempData["Message"]
    </div>
}
<style>
    .profile-pic-container {
        text-align: left;
        position: relative;
        margin: 20px;
    }

    .image-container {
        display: inline-block;
        position: relative;
    }

        .image-container img {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            object-fit: cover;
        }

    .overlay {
        position: absolute;
        bottom: 10px;
        right: 10px;
        height: 40px;
    }

    .upload-button {
        border: none;
        background-color: rgba(255, 255, 255, 0.7);
        border-radius: 50%;
        padding: 8px;
        box-shadow: 0px 2px 5px grey;
        cursor: pointer;
        outline: none;
    }

        .upload-button i {
            color: #333;
        }

        .upload-button:hover {
            background-color: rgba(255, 255, 255, 0.9);
        }

    #profilePictureInput {
        display: none; /* Hide the default input */
    }

    /* Position the button on the bottom right of the image */
    .image-container:hover .overlay {
        display: block;
    }
</style>

<form method="post" enctype="multipart/form-data">
    <div class="mx-auto w-100 step1">
        <button type="button" onclick="window.history.back();" class="btn btn-secondary mb-3"><i class="fa-solid fa-chevron-left"></i> Back</button>
        <div class="row">
            <div class="col-md-12">
                @if (User.IsInRole("admin"))
                {
                    <h1 class="step2">@Model.FirstName @Model.LastName's Profile</h1>
                }
                else
                {
                    <h1>Welcome, @Model.FirstName @Model.LastName!</h1>
                }
            </div>
        </div>

        <div class="profile-pic-container" style="margin-left: -1px;">
            <div class="image-container">
                @if (Model.User.ProfileImage != null)
                {
                    <img id="profilePic" src="@Url.Content($"~/{Model.User.ProfileImage}")" alt="Profile Picture" style="border: 1px solid black;" />
                }
                else
                {
                    <img id="profilePic" src="~/images/default.png" alt="Profile Picture" style="border: 1px solid black;" />
                }
                <div class="overlay">
                    @if (User.IsInRole("student"))
                    {
                        <button type="button" class="upload-button">
                            <i class="fa-solid fa-plus fa-2xs"></i><i class="fa-solid fa-camera"></i>
                        </button>
                        <input type="file" id="profilePictureInput" name="profilePicture" accept="image/*" />
                    }
                </div>
            </div>
        </div>

        <div class="step3">
            @if (User.IsInRole("admin"))
            {
                <h4 class="mt-3">Student Information</h4>
            }
            else if (User.IsInRole("student"))
            {
                <h4 class="mt-3">My Information</h4>
            }
            <div class="row mt-3">
                <div class="col-md-4">
                    <label asp-for="@Model.FirstName">First Name:</label>
                    <input type="text" class="form-control mb-3" value="@Model.FirstName" readonly />
                </div>
                <div class="col-md-4">
                    <label asp-for="@Model.LastName">Last Name:</label>
                    <input type="text" class="form-control" value="@Model.LastName" readonly />
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <label asp-for="@Model.StuId">Student ID:</label>
                    <input type="text" class="form-control" value="@Model.StuId" readonly />
                </div>
                <div class="col-md-4">
                    <label asp-for="@Model.StuEmail">Email Address:</label>
                    <input type="text" class="form-control mb-3" value="@Model.StuEmail" readonly />
                </div>
            </div>
        </div>

        @if (User.IsInRole("student"))
        {
            <div class="step4">
                <h4 class="mt-4">Change Password</h4>

                <form method="post" asp-action="ChangePassword" enctype="multipart/form-data">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="StuEmail" />
                    <div class="row mt-3">
                        <div class="col-md-4">
                            <label asp-for="OldPassword">Old Password:</label>
                            <input asp-for="OldPassword" class="form-control mb-3" />
                            <span asp-validation-for="OldPassword" class="text-danger"></span>
                        </div>
                        <div class="col-md-4">
                            <label asp-for="Password">New Password:</label>
                            <input asp-for="Password" class="form-control" />
                            <span asp-validation-for="Password" class="text-danger"></span>
                        </div>
                        <div class="col-md-4">
                            <label asp-for="ConfirmPassword">Confirm New Password:</label>
                            <input asp-for="ConfirmPassword" class="form-control mb-3" />
                            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                        </div>
                        <div class="col-md-2">
                            <input type="submit" asp-controller="Student" asp-action="ChangePassword" class="btn btn-primary" value="Change Password" />
                        </div>
                    </div>
                </form>
            </div>
        }
    </div>

    @if (User.IsInRole("admin"))
    {
        <hr />
        <div class="row mt-2 mb-5">
            <div class="col-md-12">
                <h4>Reset Password</h4>
                <p>If the student has forgotten their password, press this button to reset it to the default password. Default password is: StudentLastname + Student1! (Ex: GrahamStudent1!)</p>
            </div>
            <div class="col-md-12">
                <button type="button" class="btn btn-primary mt-1" data-bs-toggle="modal" data-bs-target="#resetModal">Reset Password</button>
            </div>
        </div>
    }

    <div class="modal" id="uploadConfirmationModal" tabindex="-1" aria-labelledby="uploadConfirmModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="uploadConfirmModalLabel">Confirm Image Upload</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="row">
                    <div class="modal-body">
                        <p>Are you sure you want to upload this picture?</p>
                        <img id="imgPreview" src="#" alt="Image Preview" class="img-fluid" style="border-radius: 50%; object-fit: cover; width: 150px; height: 150px;" />
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary" asp-action="UploadPFP" asp-controller="Student">Upload</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

<!-- Modal -->
<div class="modal fade" id="resetModal" tabindex="-1" aria-labelledby="resetModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-action="ResetPassword" enctype="multipart/form-data">
                <div class="modal-header">
                    <h5 class="modal-title" id="resetModalLabel">Reset Password</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @if (@Model.LastName[Model.LastName.Length - 1] == 's')
                    {
                        <p>Are you sure you want to reset @Model.FirstName @Model.LastName' password?</p>
                    }
                    else
                    {
                        <p>Are you sure you want to reset @Model.FirstName @Model.LastName's password?</p>
                    }
                </div>
                <div class="modal-footer">
                    <form>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <input type="hidden" asp-for="StuEmail" />
                        <input type="hidden" asp-for="Id" />
                        <input type="submit" asp-controller="Student" asp-action="ResetPassword" asp-route-email="@Model.StuEmail" asp-route-id="Id" class="btn btn-primary" value="Reset Password" />
                    </form>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    // When the custom upload button is clicked, trigger the hidden file input
    document.querySelector('.upload-button').addEventListener('click', function () {
        document.getElementById('profilePictureInput').click();
    });

    // When a file is selected, read it for the preview and show the Bootstrap modal
    document.getElementById('profilePictureInput').addEventListener('change', function (event) {
        var file = event.target.files[0];
        var reader = new FileReader();
        reader.onload = function (e) {
            // Correct the ID from 'imagePreview' to 'imgPreview'
            document.getElementById('imgPreview').src = e.target.result;
            // Show the modal using the correct Bootstrap 5 method
            var uploadModal = new bootstrap.Modal(document.getElementById('uploadConfirmationModal'));
            uploadModal.show();
        };
        reader.readAsDataURL(file);
    });

    // The ID of the confirm button inside the modal is 'confirmUpload', so we should use that
    document.getElementById('confirmUpload').addEventListener('click', function () {
        // This is where the upload logic will go
        var uploadModal = bootstrap.Modal.getInstance(document.getElementById('uploadConfirmationModal'));
        uploadModal.hide();

        // Add the logic to handle the actual file upload here
    });
</script>

@if (User.IsInRole("admin"))
{
    <script>
        const tour = new Shepherd.Tour({
            useModalOverlay: true,
            defaultStepOptions: {
                classes: 'shadow-md bg-purple-dark',
                scrollTo: true
            },
            defaultStepOptions: {
                exitOnEsc: true
            }
        });

        @*Start of Dashboard Demo*@
            tour.addStep({
                id: 'example-step',
                text: 'This is the students information and profile page.',
                attachTo: {
                    element: '.step1',
                    on: 'bottom'
                },
                classes: 'step1',
                buttons: [
                    {
                        text: 'Next',
                        action: tour.next
                    },
                    {
                        text: 'Exit Tour',
                        action: tour.cancel
                    }
                ]
            });

        tour.addStep({
            id: 'example-step',
            text: 'This shows you whose profile you are currently on.',
            attachTo: {
                element: '.step2',
                on: 'bottom'
            },
            classes: 'step2',
            buttons: [
                {
                    text: 'Next',
                    action: tour.next
                },
                {
                    text: 'Exit Tour',
                    action: tour.cancel
                }
            ]
        });

        tour.addStep({
            id: 'example-step',
            text: 'This is their information.',
            attachTo: {
                element: '.step3',
                on: 'bottom'
            },
            classes: 'step3',
            buttons: [
                {
                    text: 'Next',
                    action: tour.next
                },
                {
                    text: 'Exit Tour',
                    action: tour.cancel
                }
            ]
        });

        tour.addStep({
            id: 'example-step',
            text: 'This is the area you can change the password in for the student in the case that they forget or misplace their old password.',
            attachTo: {
                element: '.step4',
                on: 'bottom'
            },
            classes: 'step4',
            buttons: [
                {
                    text: 'Finish',
                    action: tour.cancel
                }
            ]
        });
        @*End of Dashboard Demo*@
    </script>
}